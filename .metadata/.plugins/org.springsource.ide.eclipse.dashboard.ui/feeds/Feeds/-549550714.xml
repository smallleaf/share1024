<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2016-12-02T16:05:01Z</updated>
  <entry>
    <title>Spring Integration 5.0 Milestone 1 Available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/12/02/spring-integration-5-0-milestone-1-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Gary Russell</name>
    </author>
    <id>tag:spring.io,2016-12-02:2721</id>
    <updated>2016-12-02T16:05:01Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;We are pleased to announce that the first milestone for the 5.0 version of Spring Integration is now available.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This is a new major version, based on &lt;a href="https://spring.io/blog/2016/11/08/spring-framework-5-0-m3-released"&gt;Spring Framework 5.0&lt;/a&gt; and requires Java 8; this is the biggest change so far, but the following are also included:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="https://github.com/spring-projects/spring-integration-java-dsl"&gt;Java DSL&lt;/a&gt; is now rolled into the framework itself; there are some minor changes to the DSL, such as the removal of the &lt;code&gt;.handleWithAdapter()&lt;/code&gt; methods and some general Factory classes. A complete discussion of the DSL changes can be found in the &lt;a href="https://github.com/spring-projects/spring-integration/wiki/Spring-Integration-4.3-to-5.0-Migration-Guide"&gt;Migration Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade to &lt;a href="https://spring.io/blog/2016/11/23/first-milestone-of-next-generation-spring-data-released"&gt;Spring Data Kay&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Upgrade to &lt;a href="https://spring.io/blog/2016/11/30/spring-amqp-2-0-milestone-1-available"&gt;Spring AMQP 2.0&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;First class support for TCP/UDP has been added to the DSL.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spring Integration is now based on Reactor 3.0 and Messaging Gateway &lt;code&gt;Promise&lt;/code&gt; methods now have to be changed to return &lt;code&gt;Mono&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can now configure mid-flow transactions via &lt;code&gt;TransactionHandleMessageAdvice&lt;/code&gt; for &lt;code&gt;adviceChain&lt;/code&gt; Messaging Annotations attribute and &lt;code&gt;&amp;lt;transactional&amp;gt;&lt;/code&gt; sub-element when using XML configuration.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;And of course anotther goal of this new Spring Integration generation is to add Reactive Streams support. Right now, it is represented by the &lt;code&gt;ReactiveChannel&lt;/code&gt; and &lt;code&gt;ReactiveConsumer&lt;/code&gt;. Also, all of the out-of-the-box &lt;code&gt;MessageHandler&lt;/code&gt; s are now Reactive &lt;code&gt;Subscriber&lt;/code&gt; s with the ability to process messages from an upstream &lt;code&gt;MessageChannel&lt;/code&gt; including back-pressure support, when a &lt;code&gt;ReactiveConsumer&lt;/code&gt; is used.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For complete information, see the &lt;a href="http://docs.spring.io/spring-integration/docs/5.0.0.M1/reference/html/whats-new.html"&gt;What&amp;#8217;s new&lt;/a&gt; in the reference manual and the &lt;a href="https://jira.spring.io/jira/secure/ReleaseNote.jspa?projectId=10121&amp;amp;version=15594"&gt;JIRA release notes&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;More new features &amp;amp; improvements and, of course, more Reactive Streams support in the upcoming milestones.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-integration/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://jira.spring.io/browse/INT"&gt;JIRA&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-integration/blob/master/CONTRIBUTING.md"&gt;Contributions&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-integration"&gt;Help&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-integration"&gt;Chat&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Statemachine 1.2.0.RC1 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/12/01/spring-statemachine-1-2-0-rc1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Janne Valkealahti</name>
    </author>
    <id>tag:spring.io,2016-12-01:2717</id>
    <updated>2016-12-01T17:00:51Z</updated>
    <content type="html">&lt;p&gt;We¡¯re pleased to announce a release candicate of &lt;a href="http://projects.spring.io/spring-statemachine"&gt;Spring Statemachine 1.2.0.RC1&lt;/a&gt;. Artifacts are available from &lt;a href="http://repo.spring.io/libs-milestone/org/springframework/statemachine/"&gt;Spring Repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What we got into this release:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Usual bug fixes and small enhancements&lt;/li&gt;
  &lt;li&gt;New api&amp;rsquo;s for tracing and monitoring&lt;/li&gt;
  &lt;li&gt;New monitoring sample&lt;/li&gt;
  &lt;li&gt;Full repository config support for Redis, MongoDB and JPA&lt;/li&gt;
  &lt;li&gt;Boot auto-config enhacements&lt;/li&gt;
  &lt;li&gt;Lot of documentation enhacements&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Full changes as usual are available from &lt;a href="https://github.com/spring-projects/spring-statemachine/blob/master/docs/src/info/changelog.txt"&gt;changelog&lt;/a&gt;. We&amp;rsquo;re planning to fire up 1.2.0.RELEASE before xmas and possibly do a second release candicate if any major issues are found.&lt;/p&gt;
&lt;p&gt;Thank you for all who have contributed in any way either via Stack Overflow, GitHub Issues or other channels. Driving force for changes really has been a community and requests from it.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Webinar Dec 8th: Awesome tools to level up your Spring Cloud architecture</title>
    <link rel="alternate" href="https://spring.io/blog/2016/12/01/webinar-dec-8th-awesome-tools-to-level-up-your-spring-cloud-architecture" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-12-01:2720</id>
    <updated>2016-12-01T14:54:00Z</updated>
    <content type="html">&lt;p&gt;Getting up and running with Spring Cloud is a breeze. But once the initial setup is done, it needs to be complemented with an ecosystem that can cope with the extra operational complexity and quality concerns. While running Spring Cloud in production for over a year, Pivotal has integrated some interesting tools for documentation, operations and testing. During this talk you will see a demo of an integrated platform based on Spring Cloud, including tools like Spring Cloud Contract, wiremock, saboteur, ELK, Spinnaker, Spring Boot Admin and more. One of these tools is a dashboard for visualising Pivotal¡¯s Spring Cloud microservice architecture, which has recently been open sourced. Documenting, testing, troubleshooting, and monitoring highly distributed systems in microservice architectures are hard. Finding quality, complementary tools in the wilds of open source can be even harder. Join this webinar for a pragmatic look at taming some of the challenges of running microservices in production.&lt;/p&gt;
&lt;p&gt;North America&lt;br/&gt;Thursday, December 8&lt;br/&gt;10:00am PST (UTC-8 hours)&lt;br/&gt;&lt;a href="http://connect.pivotal.io/OSS_Webinar_8-Tools-Spring-Cloud-Arch_Q416_8-Awesome-Tools-for-Spring-Cloud-Architecture.html"&gt;Register Now!&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Building Modern Web Applications with Angular2</title>
    <link rel="alternate" href="https://spring.io/blog/2016/12/01/springone-platform-2016-replay-building-modern-web-applications-with-angular2" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-12-01:2719</id>
    <updated>2016-12-01T13:37:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Sergi Almar&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/building-modern-web-applications-with-angular2"&gt;http://www.slideshare.net/SpringCentral/building-modern-web-applications-with-angular2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Web development has become more complex in the last few years with a plethora of frameworks to choose from and no clear direction. Join Sergi Almar in this presentation to learn why Angular2 is a good fit for Spring developers. We&amp;rsquo;ll review the Angular2 architecture and see how TypeScript allows us to build more maintable and clean applications having the benefits of a typed language. We&amp;rsquo;ll look at the Angular2 component based model, dependency injection, data binding, routing, templates&amp;hellip;to build modern web applications.&lt;/p&gt;
&lt;p&gt;No prior AngularJS knowledge is required.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/dx8fbW8cWGw" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Netflix's Edge Gateway Using Zuul</title>
    <link rel="alternate" href="https://spring.io/blog/2016/12/01/springone-platform-2016-replay-netflix-s-edge-gateway-using-zuul" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-12-01:2718</id>
    <updated>2016-12-01T12:03:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Mikey Cohen, Netflix&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/netflixs-edge-gateway-using-zuul"&gt;http://www.slideshare.net/SpringCentral/netflixs-edge-gateway-using-zuul&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An edge gateway is an essential piece of infrastructure for large scale cloud based services. This presentation details the purpose, benefits and use cases for an edge gateway to provide security, traffic management and cloud cross region resiliency. How a gateway can be used to enhance continuous deployment, and help testing of new service versions and get service insights and more are discussed. Philosophical and architectural approaches to what belongs in a gateway vs what should be in services will be discussed. Real examples of how gateway services, built on top of Netflix&amp;rsquo;s Open source project, Zuul, are used in front of nearly all of Netflix&amp;rsquo;s consumer facing traffic will show how gateway infrastructure is used in real highly available, massive scale services.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/mHHHpxJuTAo" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring Tips: JTA</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/30/spring-tips-jta" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-11-22:2702</id>
    <updated>2016-11-30T18:24:00Z</updated>
    <content type="html">&lt;p&gt;Speaker: &lt;a href="https://www.twitter.com/starbuxman"&gt;Josh Long&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hi Spring fans! In this tip, we&amp;rsquo;ll look at how to manage distributed transactions in Spring with JTA.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/356eqR8XcqE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring AMQP 2.0 Milestone 1 Available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/30/spring-amqp-2-0-milestone-1-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Gary Russell</name>
    </author>
    <id>tag:spring.io,2016-11-30:2713</id>
    <updated>2016-11-30T16:58:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;We are pleased to announce the first milestone of Spring AMQP 2.0 is now available.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For a complete list of changes; see the &lt;a href="http://docs.spring.io/spring-amqp/docs/2.0.0.M1/reference/html/_introduction.html#whats-new"&gt;what&amp;#8217;s new in the reference manual&lt;/a&gt; and the &lt;a href="https://jira.spring.io/jira/secure/ReleaseNote.jspa?projectId=10450&amp;amp;version=15711"&gt;release notes&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Here are some highlights of this release&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The framework is now fully Java 8 based; several functional interfaces are provided for convenient Lambda implementations (callbacks, &lt;code&gt;ReplyingMessageListener&lt;/code&gt; etc).
Java 8 is now a requirement. It is also based on &lt;a href="https://spring.io/blog/2016/11/08/spring-framework-5-0-m3-released"&gt;Spring Framework 5.0&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The framework uses the new &lt;a href="http://www.rabbitmq.com/blog/2016/11/24/rabbitmq-java-client-4-0-is-released/"&gt;4.0 amqp-client library&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A new &lt;code&gt;DirectMessageListenerContainer&lt;/code&gt; is now available alongside the existing &lt;code&gt;SimpleMessageListenerContainer&lt;/code&gt;.
The new container actually has a simpler architecture and the listener is called directly on the amqp-client thread (hence the name &lt;code&gt;Direct&amp;#8230;&amp;#8203;&lt;/code&gt;).
See &lt;a href="http://docs.spring.io/spring-amqp/docs/2.0.0.M1/reference/html/_reference.html#choose-container"&gt;Choosing a Container&lt;/a&gt; to help you decide which container is appropriate for your application.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A subclass - &lt;code&gt;DirectReplyToMessageLisenerContainer&lt;/code&gt; - is also provided, specifically for using the RabbitMQ &lt;a href="https://www.rabbitmq.com/direct-reply-to.html"&gt;Direct ReplyTo&lt;/a&gt; feature for request/reply messaging.
This is now used by the &lt;code&gt;RabbitTemplate&lt;/code&gt; (by default) rather than creating a consumer per request/reply as was the case previously.
Consumers are cached for reuse.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;AsyncRabbitTemplate&lt;/code&gt; now supports direct replyTo, utilizing the new container; previously the async template did not support direct replyTo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;@RabbitListener&lt;/code&gt; annotations can now be configured with an error handler and the ability to send exceptions to the sender when request/reply messaging is being used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connection and channel listeners now receive shutdown signals.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can now assign names to connections created by Spring AMQP - the name appears on the RabbitMQ Admin UI.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Limited stateful retry (1 redelivery attempt) is now available (when an inbound message does not have a message id) without the need to configure a &lt;code&gt;MissingMessageIdAdvice&lt;/code&gt; which has now been removed from the framework.
Spring Retry 1.2 is required to support this feature.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The log4j appender is no longer provided due to the EOL of log4j (the log4j2 and logback appenders remain available).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Please take this opportunity to test these new capabilities and provide feedback.
The next milestone will be early next year, with GA in the first quarter.
Please use &lt;a href="https://jira.spring.io/browse/AMQP"&gt;JIRA&lt;/a&gt; to vote for backlog issues, or add requests for new features you would like to see in this major new release.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See the &lt;a href="http://projects.spring.io/spring-amqp/"&gt;project page&lt;/a&gt; for download and documentation links.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We monitor the &lt;a href="http://stackoverflow.com/tags/spring-amqp/info"&gt;spring-amqp&lt;/a&gt; tag on Stack Overflow as well as Gitter for &lt;a href="https://gitter.im/spring-projects/spring-amqp"&gt;spring-amqp&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Intro to Spring Boot</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/30/springone-platform-2016-replay-intro-to-spring-boot" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-11-30:2715</id>
    <updated>2016-11-30T10:52:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Edd¨² Mel¨¦ndez Gonzales&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/intro-to-spring-boot"&gt;http://www.slideshare.net/SpringCentral/intro-to-spring-boot&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spring Boot, the new convention-over-configuration centric framework from the Spring team at Pivotal, marries Spring&amp;rsquo;s flexibility with conventional, common sense defaults to make application development move swiftly and enjoyable. It&amp;rsquo;s ideally suited for building microservices and distributed systems and makes streamlining devops practices simple. Join Spring Boot contributor Edd¨² Mel¨¦ndez Gonzales for a look at what Spring Boot is, why it&amp;rsquo;s turning heads, why you should consider it for your next application (REST, web, batch, big-data, integration, whatever!) and how to get started.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/OnZktofShJc" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Brixton.SR7 and Spring Cloud Camden.SR3 Are Available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/29/spring-cloud-brixton-sr7-and-spring-cloud-camden-sr3-are-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Ryan Baxter</name>
    </author>
    <id>tag:spring.io,2016-11-29:2712</id>
    <updated>2016-11-29T19:31:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce that Brixton Service Release 7 and Camden Service Release 3 of &lt;a href="http://cloud.spring.io"&gt;Spring Cloud&lt;/a&gt; are available today. The releases can be found in our &lt;a href="http://repo.spring.io/release"&gt;Spring Release repository&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-cloud-dependencies%22"&gt;Maven Central&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These releases include primarily bug fixes.&lt;/p&gt;&lt;h4&gt;&lt;a href="#the-following-modules-were-updated-as-part-of-brixton-sr7" class="anchor" name="the-following-modules-were-updated-as-part-of-brixton-sr7"&gt;&lt;/a&gt;The following modules were updated as part of Brixton.SR7:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Cloud Config &lt;a href="https://github.com/spring-cloud/spring-cloud-config/milestone/21?closed=1"&gt;1.1.3.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Netflix &lt;a href="https://github.com/spring-cloud/spring-cloud-netflix/milestone/30?closed=1"&gt;1.1.7.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Sleuth &lt;a href="https://github.com/spring-cloud/spring-cloud-sleuth/milestone/17?closed=1"&gt;1.0.11.RELEASE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h4&gt;&lt;a href="#the-following-modules-were-updated-as-part-of-camden-sr3" class="anchor" name="the-following-modules-were-updated-as-part-of-camden-sr3"&gt;&lt;/a&gt;The following modules were updated as part of Camden.SR3:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Cloud Commons &lt;a href="https://github.com/spring-cloud/spring-cloud-commons/milestone/20?closed=1"&gt;1.1.6.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Config &lt;a href="https://github.com/spring-cloud/spring-cloud-config/milestone/26?closed=1"&gt;1.2.2.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Netflix &lt;a href="https://github.com/spring-cloud/spring-cloud-netflix/milestone/33?closed=1"&gt;1.2.3.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Consul &lt;a href="https://github.com/spring-cloud/spring-cloud-consul/milestone/13?closed=1"&gt;1.1.2.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Sleuth &lt;a href="https://github.com/spring-cloud/spring-cloud-sleuth/milestone/17?closed=1"&gt;1.1.0.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Contract &lt;a href="https://github.com/spring-cloud/spring-cloud-contract/milestone/7?closed=1"&gt;1.0.2.RELEASE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And, as always, we welcome feedback: either on &lt;a href="https://github.com/spring-cloud"&gt;GitHub&lt;/a&gt;, on &lt;a href="https://gitter.im/spring-cloud/spring-cloud"&gt;Gitter&lt;/a&gt;, on &lt;a href="http://stackoverflow.com/questions/tagged/spring-cloud"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/SpringCloud"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - November 29th, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/29/this-week-in-spring-november-29th-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-11-29:2711</id>
    <updated>2016-11-29T02:29:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring!&lt;/em&gt; I can&amp;rsquo;t believe how quickly this year has gone! This week I&amp;rsquo;m in &lt;a href="http://melbourne.yowconference.com.au/"&gt;Melbourne, Australia for the YOW! conference&lt;/a&gt; and then week it&amp;rsquo;s off to Brisbane and then Sydney for the next editions of the same show. Australia is the furthest I&amp;rsquo;ve ever been from my &amp;lsquo;native&amp;rsquo; timezone - so even though I always post &lt;em&gt;This Week in Spring&lt;/em&gt; every Tuesday, I appreciate that it&amp;rsquo;s still Monday for anybody west of Europe right now! Tonight, I&amp;rsquo;ll join my pal, Intellij&amp;rsquo;s Trisha Gee, and we&amp;rsquo;ll be speaking at the &lt;a href="https://www.meetup.com/en-AU/Melbourne-Java-JVM-Users-Group/"&gt;Melbourne JVM User Group&lt;/a&gt;. I&amp;rsquo;m super excited to be here, for my first time, helping bring the Spring down under. If you&amp;rsquo;re around &lt;a href="http://twitter.com/starbuxman"&gt;then say hi (@starbuxman)!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Huge release week for the Spring Cloud Dataflow team!&lt;br/&gt;* Spring Cloud Data Flow lead Dr. Mark Pollack just announced &lt;a href="https://spring.io/blog/2016/11/23/spring-cloud-data-flow-1-1-ga-released"&gt;Spring Cloud Data Flow 1.1.GA&lt;/a&gt;&lt;br/&gt;* Spring Cloud Task lead Michael Minella just announced &lt;a href="https://spring.io/blog/2016/11/22/spring-cloud-task-1-1-0-release-is-now-available"&gt;Spring Cloud Task 1.1.0&lt;/a&gt; with updated error handling, improvements to partitioned Spring Batch &lt;code&gt;Job&lt;/code&gt;s, external exection ID persistence, additional databases support and so much more.&lt;br/&gt;* Spring Cloud Data Flow ninja Thomas Risberg just announced &lt;a href="https://spring.io/blog/2016/11/22/spring-cloud-data-flow-for-kubernetes-1-1-rc1-released"&gt;Spring Cloud Data Flow for Kubernetes 1.1.RC1&lt;/a&gt; which improves support for running batch and stream processing while deploying to Kubernetes as a service fabric.&lt;br/&gt;* Spring Cloud Data Flow ninja Janne Valkealahti just announced &lt;a href="https://spring.io/blog/2016/11/23/spring-cloud-data-flow-for-apache-yarn-1-1-0-rc1-released"&gt;Spring Cloud Data Flow for Apache YARN 1.1.0 RC1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A Reactive Week&lt;br/&gt;* Spring Data ninja Mark Paluch just published a super cool look at some of the upcoming support for &lt;a href="https://spring.io/blog/2016/11/22/spring-cloud-data-flow-for-kubernetes-1-1-rc1-released"&gt;reactive programming in Spring Data&lt;/a&gt; going well beyond some of the limited support for asynchronous types already in Spring Data. I personally can&amp;rsquo;t wait to see MongoDB fly with &lt;code&gt;@EnableReactiveMongoRepositories&lt;/code&gt;!&lt;br/&gt;* Spring Data lead Oliver Gierke just annonced the first milestone of Spring Data Kay, which is more than just a new release: it updates the baseline revision to Java 8, includes support for reactive programming in &lt;a href="https://spring.io/blog/2016/11/23/first-milestone-of-next-generation-spring-data-released"&gt;Spring Data MongoDB, Cassandra, and Redis, and so much more&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Sesssion lead Rob Winch just &lt;a href="https://spring.io/blog/2016/11/23/spring-session-1-3-0-rc1-released"&gt;announced Spring Session 1.3.0.RC1&lt;/a&gt;, which includes first-class Spring Security RememberMe integration, updates to use Lettuce (the Redis driver), OrientDB support, performance improvements and much more&lt;/li&gt;
  &lt;li&gt;last week, in the ongoing Spring Tips column, we looked at Cloud Foundry, the open-source Cloud Native Platform, &lt;a href="https://spring.io/blog/2016/11/23/spring-tips-cloud-foundry"&gt;as a quick way to ship software&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
  &lt;p&gt;I really liked this visual presentation introducing &lt;a href="http://www.slideshare.net/opencredo/a-visual-introduction-to-event-sourcing-and-cqrs-by-lorenzo-nicora"&gt;CQRS and event-sourcing by the folks at OpenCredo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;My friend Simon Brown&amp;rsquo;s excellent &lt;a href="https://leanpub.com/b/software-architecture"&gt;books on Software Architecture are (for a limited time only!) available for free&lt;/a&gt;! Get &amp;rsquo;em while you can!&lt;/li&gt;
  &lt;li&gt;our friend, Matti Tahvonen, a Vaadin developer advocate, put together a nice example &lt;a href="https://github.com/mstahv/spring-boot-spatial-example"&gt;using Hibernate Spatial, Vaadin and Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>Going reactive with Spring Data</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/28/going-reactive-with-spring-data" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Mark Paluch</name>
    </author>
    <id>tag:spring.io,2016-11-06:2681</id>
    <updated>2016-11-28T17:01:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;Last weeks' &lt;a href="https://spring.io/blog/2016/11/23/first-milestone-of-next-generation-spring-data-released"&gt;Spring Data Kay M1&lt;/a&gt; is the first release ever that comes with support for reactive data access.
Its initial set of supported stores ¡ª MongoDB, Apache Cassandra and Redis ¡ª all ship reactive drivers already, which made them very natural candidates for such a prototype.
Let&amp;#8217;s take a more detailed look at the new programming model and the APIs that make up that support.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="reactive-repositories"&gt;&lt;a class="anchor" href="#reactive-repositories"&gt;&lt;/a&gt;Reactive Repositories&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The repositories programming model is the most high-level abstraction Spring Data users usually deal with.
They&amp;#8217;re usually comprised of a set of CRUD methods defined in a Spring Data provided interface and domain-specific query methods.
Here&amp;#8217;s what a reactive Spring Data repository definition would look like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="exampleblock"&gt;
&lt;div class="content"&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;public interface ReactivePersonRepository
  extends ReactiveCrudRepository&amp;lt;Person, String&amp;gt; {

  Flux&amp;lt;Person&amp;gt; findByLastname(Mono&amp;lt;String&amp;gt; lastname);

  @Query("{ 'firstname': ?0, 'lastname': ?1}")
  Mono&amp;lt;Person&amp;gt; findByFirstnameAndLastname(String firstname, String lastname);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;As you can see, there&amp;#8217;s not too much difference to what you&amp;#8217;re used to.
However, in contrast to the traditional repository interfaces, a reactive repository uses reactive types as return types and can do so for parameter types, too.
The CRUD methods in the newly introduced &lt;code&gt;ReactiveCrudRepository&lt;/code&gt;, of course make use of these types, too.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;By default, reactive repositories use &lt;a href="https://projectreactor.io"&gt;Project Reactor&lt;/a&gt; types but other reactive libraries can also be used.
We provide custom repository base interface (e.g. &lt;code&gt;RxJava1CrudRepository&lt;/code&gt;) for those and also automatically adapt the types as needed for query methods, e.g RxJava&amp;#8217;s &lt;code&gt;Observable&lt;/code&gt; and &lt;code&gt;Single&lt;/code&gt;.
The rest basically stays the same.
Note, however, that the current milestone does not support pagination yet and you of course have to have the necessary reactive libraries on the classpath to activate support for a particular library.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect2"&gt;
&lt;h3 id="reactive-configuration"&gt;&lt;a class="anchor" href="#reactive-configuration"&gt;&lt;/a&gt;Activating reactive Spring Data&lt;/h3&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Similarly to what we have in the blocking world, the support for reactive Spring Data is activated through an &lt;code&gt;@Enable¡­&lt;/code&gt; annotation alongside some infrastructure setup:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="exampleblock"&gt;
&lt;div class="content"&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@EnableReactiveMongoRepositories
public class AppConfig extends AbstractReactiveMongoConfiguration {

  @Bean
  public MongoClient mongoClient() {
    return MongoClients.create();
  }

  @Override
  protected String getDatabaseName() {
    return "reactive";
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See how we use a different base class for the infrastructure configuration, as we need to make use of the MongoDB async driver.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="using-reactive-repositories"&gt;&lt;a class="anchor" href="#using-reactive-repositories"&gt;&lt;/a&gt;Using reactive repositories&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The repository can now be used like a blocking repository, except that the handling of the result can now be done in a reactive way:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="exampleblock"&gt;
&lt;div class="content"&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@RestController
class PersonController {

  private final PersonRepository people;

  public PersonController(PersonRepository people) {
    this.people = people;
  }

  @GetMapping("/people")
  Flux&amp;lt;String&amp;gt; namesByLastname(@RequestParam Mono&amp;lt;String&amp;gt; lastname) {

    Flux&amp;lt;Person&amp;gt; result = repository.findByLastname(lastname);
    return result.map(it -&amp;gt; it.getFullName());
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See how we can forward the reactive parameters provided by Spring Web Reactive, pipe them into the repository, get back a &lt;code&gt;Flux&lt;/code&gt; in turn and then work with the execution result in a reactive way.
In general, reactive query methods follow the same idea of query creation as on the already known repositories.
Parameters passed to query methods can be either plain (e.g. &lt;code&gt;String&lt;/code&gt;) wrapped (&lt;code&gt;Optional&amp;lt;String&amp;gt;&lt;/code&gt;, &lt;code&gt;Stream&amp;lt;String&amp;gt;&lt;/code&gt;) or reactive wrapped arguments (&lt;code&gt;Mono&amp;lt;String&amp;gt;&lt;/code&gt;, &lt;code&gt;Flux&amp;lt;String&amp;gt;&lt;/code&gt;).
If you&amp;#8217;re using reactive wrappers a parameter types, the implementation defers actual query creation and execution until an actual subscription.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="reactive-templates"&gt;&lt;a class="anchor" href="#reactive-templates"&gt;&lt;/a&gt;Reactive templates&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Just as the traditional repositories are based on traditional template implementations, the reactive ones are built on top of a reactive template.
Most of the operations available in the blocking template API have a counterpart in the reactive template.
We&amp;#8217;re going to port more features of the blocking world into the reactive template APIs, but some of the operations are simply not available through reactive drivers (yet) or just do not make sense in a reactive world.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Here&amp;#8217;s is an excerpt from &lt;code&gt;ReactiveMongoOperations&lt;/code&gt; from Spring Data MongoDB.
It is implemented by &lt;code&gt;ReactiveMongoTemplate&lt;/code&gt; and uses &lt;a href="http://projectreactor.io/"&gt;Project Reactor&lt;/a&gt;'s reactive types such as &lt;code&gt;Mono&lt;/code&gt; and &lt;code&gt;Flux&lt;/code&gt; to wrap responses.
Some methods also accept reactive types to stream data into your data store.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="exampleblock"&gt;
&lt;div class="content"&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;public interface ReactiveMongoOperations {

  // ¡­

  /**
   * Map the results of an ad-hoc query on the specified collection to a
   * single instance of an object of the specified type.
   */
  &amp;lt;T&amp;gt; Mono&amp;lt;T&amp;gt; findOne(Query query, Class&amp;lt;T&amp;gt; entityClass);

  /**
   * Map the results of an ad-hoc query on the collection for the entity
   * class to a List of the specified type.
   */
  &amp;lt;T&amp;gt; Flux&amp;lt;T&amp;gt; find(Query query, Class&amp;lt;T&amp;gt; entityClass);

  /**
   * Insert the object into the specified collection.
   */
  &amp;lt;T&amp;gt; Mono&amp;lt;T&amp;gt; insert(T objectToSave, String collectionName);

  /**
   * Insert the object into the collection for the entity type of the object
   * to save.
   */
  &amp;lt;T&amp;gt; Mono&amp;lt;T&amp;gt; insert(Mono&amp;lt;? extends T&amp;gt; objectToSave);

  // ¡­
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Note, that all methods follow the reactive execution model, not executing any operations incorporating any I/O upon invocation but only on subscription to the returned value.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Let&amp;#8217;s insert some data via the template:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="exampleblock"&gt;
&lt;div class="content"&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;Flux&amp;lt;Person&amp;gt; flux = Flux.just(new Person("Walter", "White"),
  new Person("Skyler", "White"),
  new Person("Saul", "Goodman"),
  new Person("Jesse", "Pinkman"));

template.insertAll(flux).subscribe();&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Some methods&amp;#8201;&amp;#8212;&amp;#8201;like &lt;code&gt;insertAll(¡­)&lt;/code&gt;&amp;#8201;&amp;#8212;&amp;#8201;accept reactive types to stream incoming data asynchronously into your MongoDB database, e.g. coming from a &lt;code&gt;Flux&lt;/code&gt; that you receive in a Spring Web Reactive controller that will asynchronously map a JSON array via Jackson:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="exampleblock"&gt;
&lt;div class="content"&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;@PostMapping("/people")
Flux&amp;lt;People&amp;gt; namesByLastname(@RequestBody Flux&amp;lt;Person&amp;gt; people) {

  return template.insertAll(people);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;As you can see, both the repositories and the template APIs allow you to describe the request handling in a reactive, non-blocking way.
That said, let&amp;#8217;s dive even a bit deeper into the Redis support for reactive data access.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="reactive-connections-with-spring-data-redis"&gt;&lt;a class="anchor" href="#reactive-connections-with-spring-data-redis"&gt;&lt;/a&gt;Reactive Connections with Spring Data Redis&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Spring Data Redis comes with initial reactive support on connection level, currently only on &lt;a href="https://github.com/mp911de/lettuce"&gt;Lettuce&lt;/a&gt;, as it&amp;#8217;s the only Redis driver that supports reactive data access.
As Redis is usually used on a much lower abstraction level, the Kay M1 release starts with reactive abstractions on that lower level.
The &lt;code&gt;LettuceConnectionFactory&lt;/code&gt; allows to get access to a &lt;code&gt;ReactiveRedisConnection&lt;/code&gt; which in turn provides access to reactive versions of Redis commands&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Functional chaining with operators creates chains to access Redis data in a reactive fashion.
Again, all I/O is asynchronous.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="exampleblock"&gt;
&lt;div class="content"&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;ReactiveKeyCommands keyCommands = connection.keyCommands();
keyCommands.randomKey()
  .flatMap(keyCommands::type)
  .flatMap(System.out::println)
  .subscribe();&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This code obtains a random key and prints its data type.
A non-existant random key is completed as empty &lt;code&gt;Mono&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Reactive Redis commands come in two flavors: accepting plain arguments and accepting command publishers.
A command publisher emits specific Redis commands to stream data right into Redis.
Each emitted command emits a command response once the command is executed.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="exampleblock"&gt;
&lt;div class="content"&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code class="language-java" data-lang="java"&gt;public interface ReactiveStringCommands {

  // ¡­

  Mono&amp;lt;Boolean&amp;gt; set(ByteBuffer key, ByteBuffer value);

  Flux&amp;lt;BooleanResponse&amp;lt;SetCommand&amp;gt;&amp;gt; set(Publisher&amp;lt;SetCommand&amp;gt; commands);

  // ¡­
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Traditional Spring Data Redis used &lt;code&gt;byte[]&lt;/code&gt; on its blocking API to exchange data.
A &lt;code&gt;byte[]&lt;/code&gt; forces data duplication if data is available in a buffer such as &lt;code&gt;ByteBuffer&lt;/code&gt; or Netty&amp;#8217;s &lt;code&gt;ByteBuf&lt;/code&gt;.
Reactive support is a lot about efficient resource usage, so we decided to expose methods accepting and returning &lt;code&gt;ByteBuffer&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="summary"&gt;&lt;a class="anchor" href="#summary"&gt;&lt;/a&gt;Summary&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;I hope this blog post gave you an introduction into the reactive features shipped with Kay at various levels of abstraction.
You can find executable examples for all of that in our examples repository.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-data-examples/tree/master/mongodb/reactive"&gt;Reactive examples for MongoDB&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-data-examples/tree/master/cassandra/reactive"&gt;Reactive examples for Cassandra&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-data-examples/tree/master/redis/reactive"&gt;Reactive examples for Redis&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We&amp;#8217;re looking forward to shipping another milestone release in January 2017 before heading towards a release candidate.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="related-content"&gt;&lt;a class="anchor" href="#related-content"&gt;&lt;/a&gt;Related content&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2016/06/07/notes-on-reactive-programming-part-i-the-reactive-landscape"&gt;Notes on Reactive Programming Part I: The Reactive Landscape&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2016/06/13/notes-on-reactive-programming-part-ii-writing-some-code"&gt;Notes on Reactive Programming Part II: Writing Some Code&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2016/07/20/notes-on-reactive-programming-part-iii-a-simple-http-server-application"&gt;Notes on Reactive Programming Part III: A Simple HTTP Server Application&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2016/09/27/ready-your-java-8-reactive-apps-now-reactor-3-0-ga-is-out"&gt;Ready your Java 8 Reactive apps now, Reactor 3.0 GA is out !&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Leadership Election with Spring Cloud Cluster</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/28/springone-platform-2016-replay-leadership-election-with-spring-cloud-cluster" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2016-11-30:2716</id>
    <updated>2016-11-28T11:18:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Dr. David Syer&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/leadership-election-with-spring-cloud-cluster"&gt;http://www.slideshare.net/SpringCentral/leadership-election-with-spring-cloud-cluster&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Leader election allows application to work together with other applications to coordinate a cluster leadership via a third party system. A leader can then be used to provide global state or global ordering, generally without sacrificing availability. In this presentation we show how Spring Cloud Cluster provides a simple abstraction for leader election and how it is implemented using zookeeper, hazelcast and etcd. &lt;/p&gt;
&lt;p&gt;Note that 1.0.1 release deprecates everything in favour of code that now lives in Spring Integration. &lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/jQiXQCaJkpE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow 1.1 GA released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/23/spring-cloud-data-flow-1-1-ga-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Mark Pollack</name>
    </author>
    <id>tag:spring.io,2016-11-23:2709</id>
    <updated>2016-11-23T19:59:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the team, I am pleased to announce the GA release of Spring Cloud Data Flow 1.1.  Follow the links in the &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.RELEASE/reference/htmlsingle/#getting-started"&gt;getting started guide&lt;/a&gt; to download the local server implementation and shell to create Stream and Tasks.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;General highlights of the 1.1 GA Release include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Builds upon Spring Boot 1.4, Spring Cloud Camden SR2, Spring Integration 4.3 and Spring Cloud Task 1.1 release improvements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adds &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.RELEASE/reference/htmlsingle/#configuration-security-ldap-authentication"&gt;LDAP&lt;/a&gt;, &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.RELEASE/reference/htmlsingle/#configuration-security-basic-authentication"&gt;Basic&lt;/a&gt; and &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.RELEASE/reference/htmlsingle/#configuration-security-file-based-authentication"&gt;File&lt;/a&gt; based backend authentication&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improvements to &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.RELEASE/reference/htmlsingle/#configuration-security-oauth2"&gt;OAUTH backed authentication&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.RELEASE/reference/htmlsingle/#_ldap_transport_security"&gt;LDAP authentication&lt;/a&gt; is now supported with SSL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adds a form-based login page for non-OAUTH backend authentication methods such as the LDAP, Basic and File-based options&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adds the ability to &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.RELEASE/reference/htmlsingle/#_inline_vs_file_reference_properties_2"&gt;pass application specific properties via YAML file&lt;/a&gt;.  This is particularly useful when deploying streams that require many deployment properties to be set.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Portable deployment properties for memory, disk and cpu are in place for support across various runtime implementations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Documentation for the core &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.RELEASE/reference/htmlsingle/#api-guide"&gt;REST API&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Updated reference documentation showing how to integrate with &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.RELEASE/reference/htmlsingle/#_spring_boot_admin"&gt;Spring Boot Admin to visualize server metrics&lt;/a&gt; and how to &lt;a href="http://docs.spring.io/spring-cloud-dataflow/docs/1.1.0.RELEASE/reference/htmlsingle/#_monitoring_deployed_applications"&gt;export Stream/Task application metrics to external application monitoring tools&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;UI Highlights include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Bulk import and registration of stream and task app-starters&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bulk import support for Task definitions. This allows importing task definitions from a file or the ability to add multiple task-definitions using the Flo-editor&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="videoblock"&gt;
&lt;div class="content"&gt;
&lt;iframe src="https://www.youtube.com/embed/mBvGuKjKMPk?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Adds Flo¡¯s visual representation of running streams&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add visual representation for related streams. This representation also includes nested TAPs and the downstream processing nodes in an overall topology view.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="https://raw.githubusercontent.com/spring-cloud/spring-cloud-dataflow/master/spring-cloud-dataflow-docs/src/main/asciidoc/images/dataflow-nested-tap-streams.png" alt="Visualization of Taps"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;List pages now support sorting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Server-side search support for stream and task list pages&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For the complete list of features, bug-fixes, and improvements, please refer to the &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow/milestones?state=closed"&gt;closed 1.1 family of GitHub issues&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We welcome feedback and contributions! If you have any questions, comments or suggestions, please let us know via &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow/issues"&gt;GitHub Issues&lt;/a&gt;, &lt;a href="http://stackoverflow.com/tags/spring-cloud-dataflow"&gt;StackOverflow&lt;/a&gt;, or using the #SpringCloudDataFlow hashtag on Twitter.&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>First milestone of next-generation Spring Data released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/23/first-milestone-of-next-generation-spring-data-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Oliver Gierke</name>
    </author>
    <id>tag:spring.io,2016-11-23:2708</id>
    <updated>2016-11-23T13:42:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the Spring Data team, I¡¯d like to announce the first milestone of the Kay release train. This is a special release train as it&amp;rsquo;s going to ship a new generation of Spring Data that will include a couple of breaking changes going forward.&lt;/p&gt;&lt;h2&gt;&lt;a href="#infrastructure-upgrades" class="anchor" name="infrastructure-upgrades"&gt;&lt;/a&gt;Infrastructure upgrades&lt;/h2&gt;
&lt;p&gt;The first and most noticeable change is the upgrade to Java 8 as a minimum baseline (no JDK 6 compatibility anymore) and an upgrade to Spring 5 as framework foundation. In subsequent milestones we&amp;rsquo;re going to ship some significant internal rewrites that will also affect user facing API to make use of the new language features in JDK 8.&lt;/p&gt;&lt;h2&gt;&lt;a href="#support-for-reactive-data-access" class="anchor" name="support-for-reactive-data-access"&gt;&lt;/a&gt;Support for reactive data access&lt;/h2&gt;
&lt;p&gt;The most significant additions that made it into the milestone is the addition of support for reactive data access for selected stores. This means: reactive Spring Data repositories and templates for MongoDB, Cassandra and Redis. Other stores are going to follow with subsequent milestones. The introduction of reactive data access support for MongoDB also required us to finally switch from the legacy &lt;code&gt;DBObject&lt;/code&gt; API to MongoDB&amp;rsquo;s current &lt;code&gt;Document&lt;/code&gt; one.&lt;/p&gt;
&lt;p&gt;We have example projects ready for all of these stores:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-projects/spring-data-examples/tree/master/mongodb/reactive"&gt;Reactive examples for MongoDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-projects/spring-data-examples/tree/master/cassandra/reactive"&gt;Reactive examples for Cassandra&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/spring-projects/spring-data-examples/tree/master/redis/reactive"&gt;Reactive examples for Redis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We consider this release a starting point to get early feedback from you guys. There are some gaps to be filled, support for additional stores to be added but we&amp;rsquo;d definitely like to hear from you already.&lt;/p&gt;
&lt;p&gt;The Spring team is currently preparing a couple of reactive example projects to showcase the interplay of different projects. Also, a blog post covering the new reactive features in Spring Data is going to follow in a couple of days.&lt;/p&gt;&lt;h2&gt;&lt;a href="#the-laundry-list" class="anchor" name="the-laundry-list"&gt;&lt;/a&gt;The laundry list&lt;/h2&gt;
&lt;p&gt;That said, let&amp;rsquo;s round this of with the formalities.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Data Commons 2.0 M1 - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-commons/2.0.0.M1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/2.0.0.M1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/2.0.0.M1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/commons/docs/2.0.0.M1/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data JPA 2.0 M1 - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-jpa/2.0.0.M1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/2.0.0.M1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/2.0.0.M1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/jpa/docs/2.0.0.M1/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data KeyValue 2.0 M1 - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-keyvalue/2.0.0.M1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/2.0.0.M1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/2.0.0.M1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/keyvalue/docs/2.0.0.M1/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Cassandra 2.0 M1 - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-cassandra/2.0.0.M1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/2.0.0.M1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/2.0.0.M1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/cassandra/docs/2.0.0.M1/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data for Apache Solr 3.0 M1 - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-solr/3.0.0.M1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/3.0.0.M1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/3.0.0.M1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/solr/docs/3.0.0.M1/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Gemfire 2.0 M1 - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-gemfire/2.0.0.M1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/2.0.0.M1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/2.0.0.M1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/gemfire/docs/2.0.0.M1/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Neo4j 5.0 M1 - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-neo4j/5.0.0.M1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/5.0.0.M1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/5.0.0.M1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/neo4j/docs/5.0.0.M1/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data MongoDB 2.0 M1 - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-mongodb/2.0.0.M1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/2.0.0.M1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/2.0.0.M1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/mongodb/docs/2.0.0.M1/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Envers 2.0 M1 - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-envers/2.0.0.M1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/envers/docs/2.0.0.M1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/envers/docs/2.0.0.M1/reference/html"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data REST 3.0 M1 - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-rest-webmvc/3.0.0.M1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/3.0.0.M1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/3.0.0.M1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/rest/docs/3.0.0.M1/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Redis 2.0 M1 - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-redis/2.0.0.M1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/2.0.0.M1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/2.0.0.M1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/redis/docs/2.0.0.M1/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Elasticsearch 3.0 M1 - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-elasticsearch/3.0.0.M1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/3.0.0.M1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/3.0.0.M1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/elasticsearch/docs/3.0.0.M1/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Data Couchbase 3.0 M1 - &lt;a href="https://repo.spring.io/libs-milestone/org/springframework/data/spring-data-couchbase/3.0.0.M1"&gt;Artifacts&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/3.0.0.M1/api"&gt;JavaDocs&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/3.0.0.M1/reference/html"&gt;Documentation&lt;/a&gt; - &lt;a href="http://docs.spring.io/spring-data/couchbase/docs/3.0.0.M1/changelog.txt"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Find a curated changelog in our &lt;a href="https://github.com/spring-projects/spring-data-commons/wiki/Release-Train-Kay"&gt;release train wiki&lt;/a&gt; or skim through a &lt;a href="https://jira.spring.io/issues/?filter=????"&gt;full list of changes in JIRA&lt;/a&gt;. Your feedback is welcome.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow for Apache YARN 1.1.0.RC1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/23/spring-cloud-data-flow-for-apache-yarn-1-1-0-rc1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Janne Valkealahti</name>
    </author>
    <id>tag:spring.io,2016-11-23:2707</id>
    <updated>2016-11-23T12:38:07Z</updated>
    <content type="html">&lt;p&gt;On behalf of the Spring Cloud Data Flow team, I am pleased to announce the 1.1.0.RC1 release of &lt;a href="http://cloud.spring.io/spring-cloud-dataflow-server-yarn"&gt;Spring Cloud Data Flow for Apache YARN&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow-server-yarn"&gt;Spring Cloud Data Flow for Apache YARN&lt;/a&gt; allows one to use all the goodness of &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow"&gt;Spring Cloud Data Flow&lt;/a&gt; (like the Shell and UI) while targeting Apache YARN as a backend. Stream components are deployed as individual apps in Apache YARN, leveraging the power of the platform to handle scaling and health monitoring.&lt;/p&gt;
&lt;p&gt;This first release candicate&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Builds upon Spring Cloud Data Flow 1.1.0.RC1 and Spring Cloud Deployer 1.1.0.RC1.&lt;/li&gt;
  &lt;li&gt;Support for keeping multiple deployer versions in hdfs.&lt;/li&gt;
  &lt;li&gt;Preparation of supporting upgrades on Ambari when these become available with Ambari future versions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get started using Spring Cloud Data Flow for Apache YARN &lt;a href="http://docs.spring.io/spring-cloud-dataflow-server-yarn/docs/1.1.0.RC1/reference/htmlsingle/#_spring_cloud_data_flow_runtime"&gt;follow these steps&lt;/a&gt; outlined in the reference documentation.&lt;/p&gt;
&lt;p&gt;For a complete/cumulative list of changes and improvements, please refer to &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow-server-yarn/issues?q=milestone%3A1.1.0.M1+is%3Aclosed"&gt;Server 1.1.0.M1 release&lt;/a&gt;, &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow-server-yarn/issues?q=milestone%3A1.1.0.RC1+is%3Aclosed"&gt;Server 1.1.0.RC1 release&lt;/a&gt;, &lt;a href="https://github.com/spring-cloud/spring-cloud-deployer-yarn/issues?q=milestone%3A1.1.0.M1+is%3Aclosed"&gt;Deployer 1.1.0.M1 release&lt;/a&gt;, &lt;a href="https://github.com/spring-cloud/spring-cloud-deployer-yarn/issues?q=milestone%3A1.1.0.RC1+is%3Aclosed"&gt;Deployer 1.1.0.RC1 release&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Session 1.3.0 RC1 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/23/spring-session-1-3-0-rc1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Rob Winch</name>
    </author>
    <id>tag:spring.io,2016-11-23:2706</id>
    <updated>2016-11-23T04:19:40Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the community, I&amp;#8217;m pleased to announce the release of Spring Session 1.3.0.RC1. This release release closes lots of community submitted Pull Requests. For a complete list of changes see the &lt;a href="https://github.com/spring-projects/spring-session/milestone/16?closed=1"&gt;changelog&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="what-s-new-in-spring-session-1-3-0-rc1" class="sect0"&gt;&lt;a class="anchor" href="#what-s-new-in-spring-session-1-3-0-rc1"&gt;&lt;/a&gt;What¡¯s New in Spring Session 1.3.0 RC1&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Highlights include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First class &lt;a href="http://docs.spring.io/spring-session/docs/1.3.0.RC1/reference/html5/#spring-security"&gt;Spring Security¡¯s RememberMe&lt;/a&gt; Support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Updated guides to &lt;a href="https://github.com/spring-projects/spring-session/pull/652"&gt;use Lettuce&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://docs.spring.io/spring-session/docs/1.3.x-SNAPSHOT/reference/html5/#community-extensions"&gt;OrientDB Support&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuration Improvements&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Performance Optimizations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bug Fixes&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="contributions" class="sect0"&gt;&lt;a class="anchor" href="#contributions"&gt;&lt;/a&gt;Contributions&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Without the community we couldn&amp;#8217;t be the successful project we are today. I&amp;#8217;d like to thank everyone that created issues &amp;amp; provided feedback.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="feedback-please" class="sect0"&gt;&lt;a class="anchor" href="#feedback-please"&gt;&lt;/a&gt;Feedback Please&lt;/h1&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If you have feedback on this release, I encourage you to reach out via &lt;a href="http://stackoverflow.com/questions/tagged/spring-session"&gt;StackOverflow&lt;/a&gt;, &lt;a href="https://github.com/spring-projects/spring-session/issues"&gt;GitHub Issues&lt;/a&gt;, or via the comments section. You can also ping me &lt;a href="https://twitter.com/rob_winch"&gt;@rob_winch&lt;/a&gt; or Joe &lt;a href="https://twitter.com/joe_grandja"&gt;@joe_grandja&lt;/a&gt; on Twitter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Of course the best feedback comes in the form of &lt;a href="https://github.com/spring-projects/spring-session/blob/1.3.0.RC1/CONTRIBUTING.adoc"&gt;contributions&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-session/"&gt;Project Site&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-session/docs/1.3.0.RC1/reference/html5/"&gt;Reference&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-session"&gt;Help&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Tips: Cloud Foundry</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/23/spring-tips-cloud-foundry" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-11-20:2700</id>
    <updated>2016-11-23T04:06:00Z</updated>
    <content type="html">&lt;p&gt;Speaker: Josh Long&lt;br/&gt;&lt;a href="https://www.twitter.com/starbuxman"&gt;https://www.twitter.com/starbuxman&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hi Spring fans! In this tip, we&amp;rsquo;ll look at Cloud Foundry, a an open-source cloud platform that&amp;rsquo;s optimized for managing applications. To those of you in the US, happy Thanksgiving tomorrow! &lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/T9KcS8s0RPs" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Task 1.1.0.RELEASE is now available</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/22/spring-cloud-task-1-1-0-release-is-now-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Michael Minella</name>
    </author>
    <id>tag:spring.io,2016-11-22:2705</id>
    <updated>2016-11-22T19:54:02Z</updated>
    <content type="html">&lt;p&gt;We are pleased to announce that Spring Cloud Task 1.1.0.RELEASE is now available via Github and the Pivotal download repository. Many thanks to all of those who contributed to this release.&lt;/p&gt;&lt;h2&gt;&lt;a href="#spring-cloud-task-1-1-0-offers-the-following-features" class="anchor" name="spring-cloud-task-1-1-0-offers-the-following-features"&gt;&lt;/a&gt;Spring Cloud Task 1.1.0 offers the following features:&lt;/h2&gt;
&lt;p&gt;This is the generally available release (GA) for 1.1.0. This release addresses key enhancements to the project to allow for better coverage of operational concerns for tasks in a cloud environment. Features new to the 1.1.0 line include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
  &lt;p&gt;&lt;em&gt;Updated error handling&lt;/em&gt; - 1.0.x stored stack traces that were the result of task executions within the &lt;code&gt;TaskExecution#exitMessage&lt;/code&gt; field, requiring that this field perform double duty. First it was available for orchestration of tasks (similar to &lt;code&gt;StepExecution#exitStatus&lt;/code&gt; in Spring Batch) as well as the storage of stack traces for debugging. In the 1.1.0 release, error messages have been moved to a new field &lt;code&gt;TaskExecution#errorMessage&lt;/code&gt; so that each field has it&amp;rsquo;s own, dedicated use.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;
  &lt;p&gt;&lt;em&gt;Updated customization options for partitioned batch jobs&lt;/em&gt; - In the 1.0.x line for Spring Cloud Task, when launching workers as tasks, there was not a way to customize the command line arguments provided to them. This is an issue in environments like CloudFoundry where you can use command line args to customize configuration without the need to re-push your app. In the new 1.1.0 release, we provide the ability to customize command line arguments via the &lt;code&gt;CommandLineArgsProvider&lt;/code&gt; which is similar in functionality to the &lt;code&gt;EnvironmentVariablesProvider&lt;/code&gt; introduced in 1.0.2.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;
  &lt;p&gt;&lt;em&gt;External execution id persistence&lt;/em&gt; - When running a task in a cloud environment, there is typically a separate id associated with the infrastructure for the task&amp;rsquo;s execution. The id that YARN uses in the history server or the task id used by CloudFoundry are examples of these ids. Spring Cloud Task 1.1.0 now provides the ability to persist this external execution id for the ability to map one to the other.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;
  &lt;p&gt;&lt;em&gt;Record the request of a task execution&lt;/em&gt; - When launching tasks on some form of infrastructure like Kubernetes or CloudFoundry, there can be a lag between the time the task execution is requested vs when it actually starts. Compounding this issue is the fact that if there is a problem with the platform, the task may not get launched at all. If this does occur, you&amp;rsquo;ll still want a record of the request. Spring Cloud Task 1.1.0 introduces the ability to record that a task is expected to start prior to it&amp;rsquo;s execution actually beginning. Allowing the launcher to record this request and the task itself will update it&amp;rsquo;s status accordingly.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;
  &lt;p&gt;&lt;em&gt;Additional database support for the task repository&lt;/em&gt; - 1.1.0 introduces a community contributed schema to support DB2 as a datastore for the task repository.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;a href="#what-do-you-think" class="anchor" name="what-do-you-think"&gt;&lt;/a&gt;What do you think?&lt;/h2&gt;
&lt;p&gt;We look forward to your feedback on these new features in &lt;a href="https://github.com/spring-cloud/spring-cloud-task/issues"&gt;Github&lt;/a&gt;, &lt;a href="http://stackoverflow.com/tags/spring-cloud-task"&gt;StackOverflow&lt;/a&gt;, or to me directly via Twitter &lt;a href="https://twitter.com/michaelminella"&gt;@michaelminella&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cloud.spring.io/spring-cloud-task/"&gt;Spring Cloud Task Home&lt;/a&gt; | &lt;a href="https://github.com/spring-cloud/spring-cloud-task"&gt;Source on GitHub&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-cloud-task/current/reference/htmlsingle/"&gt;Reference Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Data Flow for Kubernetes 1.1 RC1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/22/spring-cloud-data-flow-for-kubernetes-1-1-rc1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Thomas Risberg</name>
    </author>
    <id>tag:spring.io,2016-11-22:2704</id>
    <updated>2016-11-22T18:55:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce the release of the first release candidate of &lt;em&gt;Spring Cloud Data Flow for Kubernetes&lt;/em&gt; 1.1.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Spring Cloud Data Flow for Kubernetes&lt;/em&gt; provides support for orchestrating long-running (streaming) and short-lived (task/batch) data microservices on Kubernetes.&lt;/p&gt;
&lt;p&gt;The most significant change for this release can be found in the &lt;em&gt;Spring Cloud Deployer for Kubernetes&lt;/em&gt; project. Thanks to community contributions from Donovan Muller and R¨¦mon (Ray) Sinnema, we have added support for defining volumes and volume mounts for deployed apps. We support the &lt;a href="http://kubernetes.io/docs/user-guide/volumes/#types-of-volumes"&gt;volume types&lt;/a&gt; that have a model supported by the Fabric8 Kubernetes client&amp;rsquo;s &lt;a href="https://github.com/fabric8io/kubernetes-model"&gt;kubernetes-model&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For detailed list of deployer improvements review the changes listed in the &lt;a href="https://github.com/spring-cloud/spring-cloud-deployer-kubernetes/milestone/8?closed=1"&gt;Spring Cloud Deployer for Kubernetes 1.1.0.RC1 marker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We have also updated the provided scripts for testing the server on Google Cloud Container Engine. We now use Kafka 0.10.1 in order to support the latest 1.1 version of the &lt;a href="http://cloud.spring.io/spring-cloud-stream-app-starters/"&gt;app starters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The 1.1.0.RC1 release builds on the recent &lt;a href="https://spring.io/blog/2016/11/09/spring-cloud-data-flow-1-1-rc1-released"&gt;1.1 RC1 release&lt;/a&gt; of the core Spring Cloud Data Flow project.&lt;/p&gt;
&lt;p&gt;Review the &lt;a href="https://github.com/spring-cloud/spring-cloud-dataflow-server-kubernetes/milestone/8?closed=1"&gt;Spring Cloud Data Flow for Kubernetes 1.1.0.RC1 marker&lt;/a&gt; to learn more about the incremental improvements.&lt;/p&gt;
&lt;p&gt;Docker images containing the &lt;em&gt;Spring Cloud Data Flow Server for Kubernetes&lt;/em&gt; for all releases are available from the &lt;a href="https://hub.docker.com/r/springcloud/spring-cloud-dataflow-server-kubernetes/tags/"&gt;Docker Hub repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started using &lt;em&gt;Spring Cloud Data Flow for Kubernetes&lt;/em&gt; &lt;a href="http://docs.spring.io/spring-cloud-dataflow-server-kubernetes/docs/1.1.0.RC1/reference/htmlsingle/#_getting_started"&gt;follow the steps&lt;/a&gt; outlined in the reference documentation.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - November 21st, 2016</title>
    <link rel="alternate" href="https://spring.io/blog/2016/11/22/this-week-in-spring-november-21st-2016" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2016-11-22:2703</id>
    <updated>2016-11-22T12:15:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! This week I&amp;rsquo;m.. home! It&amp;rsquo;s Thanksgiving this week here in the states, after all. I am sure that I speak for the entire Pivotal team when I say that we are grateful for you, the most wonderful community on the planet. Thanks so much, and if you&amp;rsquo;re celebrating Thanksgiving, then happy Thanksgiving to you! When you&amp;rsquo;re finished with your meal - barely able to keep an eye open - I hope you&amp;rsquo;ll find a comfy arm chair and take in some of the content in this week&amp;rsquo;s roundup. &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;the good Dr. David Syer doesn&amp;rsquo;t always do view templating, &lt;a href="https://spring.io/blog/2016/11/21/the-joy-of-mustache-server-side-templates-for-the-jvm"&gt;but when he does..&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;check out this replay of Spring Security lead Rob Winch and ninja Joe Grandja as they &lt;a href="https://spring.io/blog/2016/11/16/springone-platform-2016-replay-to-spring-security-4-1-and-beyond"&gt;look forward to Spring Security 4.1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;continuing our Spring Tips series, last week &lt;a href="https://spring.io/blog/2016/11/16/spring-tips-spring-cloud-data-flow"&gt;we looked at Spring Cloud Data Flow as a way to quickly build stream-processing solutions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Hurray! Congratulations to the Apache Geode project who just saw their &lt;a href="https://blogs.apache.org/foundation/entry/the_apache_software_foundation_announces102"&gt;project promoted to an Apache top level project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I really liked this post from Spring Cloud ninja Ryan Baxter investigating &lt;a href="https://dzone.com/articles/tracing-in-microservices-with-spring-cloud-sleuth"&gt;distributed tracing with Spring Cloud Sleuth&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;wanna start trouble? Then check out this &lt;a href="https://keyholelabs.com/2016/11/18/spring-boot-starter-for-trouble-maker-released/"&gt;interesting new Spring Boot starter for Trouble Maker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;when companies grow up, they become cloud-native web companies, asserts &lt;a href="https://redmonk.com/jgovernor/2016/11/21/when-java-shops-grow-up-they-become-web-companies/"&gt;this interesting post from industry analysts RedMonk&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;learn how to &lt;a href="https://knes1.github.io/blog/2015/2015-10-19-streaming-mysql-results-using-java8-streams-and-spring-data.html"&gt;stream data from Spring Data repositories&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I really enjoye this post from Stormpath which shows how to &lt;a href="https://stormpath.com/blog/crud-application-react-spring-boot-user-authentication"&gt;build a Spring Boot application with a React.js-based frontend, all flawlessly secured using Stormpath&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Last week my friend Allard Buijze (lead of the CQRS-centric and Spring Boot-ified Axon Framework 3) and I looked at building CQRS applications. A Pivotal colleague said it was a nice webinar and thought our audiences might want to know more, and recommended this deep resource from Microsoft, &lt;a href="https://msdn.microsoft.com/en-us/library/jj554200.aspx"&gt;&lt;em&gt;The CQRS Journey&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;the latest release of the Ceylon language, 1.3.1, has been released &lt;a href="https://ceylon-lang.org/blog/2016/11/22/ceylon-1-3-1/"&gt;and features interoperability with technologies like Spring Boot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;the latest release of &lt;a href="https://groups.google.com/forum/#!topic/rabbitmq-users/d9MN-fbaP_s"&gt;RabbitMQ - 3.5.8&lt;/a&gt; has been released&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
</feed>
